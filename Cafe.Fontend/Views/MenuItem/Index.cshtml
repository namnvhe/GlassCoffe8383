@using Cafe.BusinessObjects.Models.Response
@model List<MenuItemResponse>
@{
    ViewData["Title"] = "Menu đồ uống";
}

<!-- breadcrumb-section -->
<div class="breadcrumb-section breadcrumb-bg">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 offset-lg-2 text-center">
                <div class="breadcrumb-text">
                    <p>Tươi và ngon</p>
                    <h1>Menu</h1>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end breadcrumb section -->
<!-- menu -->
<div class="product-section mt-5 mb-150">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-12 mb-3">
                <div class="input-group">
                    <input type="text" class="form-control" id="searchInput"
                           placeholder="Tìm kiếm đồ uống..."
                           style="height: 50px; border: 2px solid #f28123; border-radius: 25px 0 0 25px;">
                    <div class="input-group-append">
                        <button class="btn" type="button" id="searchBtn"
                                style="background-color: #f28123; color: white; height: 50px; border: 2px solid #f28123; border-radius: 0 25px 25px 0; padding: 0 20px;">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>

            <div class="col-lg-4 col-md-12 mb-3">
                <div class="d-flex align-items-center">
                    <label for="priceRange" class="mr-3" style="white-space: nowrap; font-weight: 600;">Giá:</label>
                    <select class="form-control" id="priceRange"
                            style="height: 50px; border: 2px solid #f28123; border-radius: 25px;">
                        <option value="">Tất cả</option>
                        <option value="0-20000">Dưới 20,000 VNĐ</option>
                        <option value="20000-40000">20,000 - 40,000 VNĐ</option>
                        <option value="40000-50000">40,000 - 50,000 VNĐ</option>
                        <option value="50000-999999">Trên 50,000 VNĐ</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col-md-12">
                <div class="card" style="border: 2px solid #f28123; border-radius: 15px;">
                    <div class="card-header" style="background-color: #f28123; color: white; border-radius: 13px 13px 0 0;">
                        <h6 class="mb-0">
                            <button class="btn btn-link text-white text-decoration-none p-0"
                                    type="button" data-toggle="collapse" data-target="#advancedFilters"
                                    aria-expanded="false" aria-controls="advancedFilters">
                                <i class="fas fa-filter mr-2"></i>Bộ lọc nâng cao
                                <i class="fas fa-chevron-down ml-2"></i>
                            </button>
                        </h6>
                    </div>
                    <div class="collapse" id="advancedFilters">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4 mb-3">
                                    <label class="font-weight-bold">Trạng thái:</label>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" value="available" id="availableFilter">
                                        <label class="form-check-label" for="availableFilter">
                                            Còn hàng
                                        </label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" value="unavailable" id="unavailableFilter">
                                        <label class="form-check-label" for="unavailableFilter">
                                            Hết hàng
                                        </label>
                                    </div>
                                </div>

                                <div class="col-md-4 mb-3">
                                    <label class="font-weight-bold">Sắp xếp theo:</label>
                                    <select class="form-control" id="sortBy">
                                        <option value="name-asc">Tên A-Z</option>
                                        <option value="name-desc">Tên Z-A</option>
                                        <option value="price-asc">Giá thấp đến cao</option>
                                        <option value="price-desc">Giá cao đến thấp</option>
                                    </select>
                                </div>

                                <div class="col-md-4 mb-3">
                                    <label class="font-weight-bold">Hiển thị:</label>
                                    <select class="form-control" id="itemsPerPage">
                                        <option value="12">12 sản phẩm</option>
                                        <option value="24">24 sản phẩm</option>
                                        <option value="48">48 sản phẩm</option>
                                        <option value="all">Tất cả</option>
                                    </select>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12">
                                    <button type="button" class="btn btn-outline-warning mr-2" id="clearFilters">
                                        <i class="fas fa-eraser mr-1"></i>Xóa bộ lọc
                                    </button>
                                    <button type="button" class="btn btn-warning" id="applyFilters">
                                        <i class="fas fa-check mr-1"></i>Áp dụng
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="d-flex justify-content-between align-items-center">
                    <span id="resultsCount" class="text-muted">
                        Hiển thị <strong>@(Model?.Count ?? 0)</strong> sản phẩm
                    </span>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="product-filters">
                    <ul>
                        @if (ViewBag.DrinkTypes != null)
                        {
                            <li class="active" data-filter="*">All</li>
                            @foreach (var drinkType in ViewBag.DrinkTypes)
                            {
                                <li data-filter=".@drinkType.TypeName.Replace(" ", "").ToLower()">@drinkType.TypeName</li>
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div class="row product-lists" id="productContainer">
            @if (Model != null && Model.Any())
            {
                @foreach (var item in Model)
                {
                    <div class="col-lg-4 col-md-6 text-center product-item @(item.DrinkTypeName != null ? item.DrinkTypeName.Replace(" ", "").ToLower() : "")"
                         data-name="@item.Name.ToLower()"
                         data-price="@item.Price"
                         data-available="@item.IsAvailable.ToString().ToLower()">
                        <div class="single-product-item">
                            <div class="product-image">
                                <a asp-action="Details" asp-controller="MenuItem" asp-route-id="@item.MenuItemId">
                                    <img src="@item.MainImage" alt="@item.Name">
                                </a>
                            </div>
                            <h3>@item.Name</h3>
                            <p class="product-price"><span>Giá</span> @item.Price.ToString("N0") VNĐ </p>
                            @if (item.IsAvailable)
                            {
                                <a href="#" class="cart-btn"><i class="fas fa-shopping-cart"></i> Add to Cart</a>
                            }
                            else
                            {
                                <button class="cart-btn" disabled style="background-color: #ccc; cursor: not-allowed;">
                                    <i class="fas fa-times"></i> Hết hàng
                                </button>
                            }
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-12 text-center">
                    <p style="font-size: 18px; color: #666; margin: 50px 0;">
                        @if (ViewBag.Error != null)
                        {
                            @ViewBag.Error
                        }
                        else
                        {
                            <span>Không có sản phẩm nào để hiển thị.</span>
                        }
                    </p>
                </div>
            }
        </div>

        <div class="row" id="noResults" style="display: none;">
            <div class="col-12 text-center">
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Không tìm thấy sản phẩm nào phù hợp với bộ lọc của bạn.
                    <br>
                    <small>Hãy thử điều chỉnh các tiêu chí tìm kiếm.</small>
                </div>
            </div>
        </div>

        @if (Model != null && Model.Count > 12)
        {
            <div class="row">
                <div class="col-lg-12 text-center">
                    <div class="pagination-wrap">
                        <ul>
                            <li><a href="#">Prev</a></li>
                            <li><a href="#">1</a></li>
                            <li><a class="active" href="#">2</a></li>
                            <li><a href="#">3</a></li>
                            <li><a href="#">Next</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<!-- end menu -->

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('searchInput');
        const priceRange = document.getElementById('priceRange');
        const availableFilter = document.getElementById('availableFilter');
        const unavailableFilter = document.getElementById('unavailableFilter');
        const sortBy = document.getElementById('sortBy');
        const clearFilters = document.getElementById('clearFilters');
        const applyFilters = document.getElementById('applyFilters');
        const productItems = document.querySelectorAll('.product-item');
        const noResults = document.getElementById('noResults');
        const resultsCount = document.getElementById('resultsCount');

        console.log('Found product items:', productItems.length); // Debug log

        // Search functionality
        searchInput.addEventListener('input', function() {
            console.log('Search input changed:', searchInput.value); // Debug log
            filterProducts();
        });

        // Price range filter
        priceRange.addEventListener('change', function() {
            console.log('Price range changed:', priceRange.value); // Debug log
            filterProducts();
        });

        // Apply filters
        applyFilters.addEventListener('click', function() {
            console.log('Apply filters clicked'); // Debug log
            filterProducts();
        });

        // Clear filters
        clearFilters.addEventListener('click', function() {
            searchInput.value = '';
            priceRange.value = '';
            availableFilter.checked = false;
            unavailableFilter.checked = false;
            sortBy.value = 'name-asc';
            console.log('Filters cleared'); // Debug log
            filterProducts();
        });

        function filterProducts() {
            const searchTerm = searchInput.value.toLowerCase();
            const selectedPriceRange = priceRange.value;
            const showAvailable = availableFilter.checked;
            const showUnavailable = unavailableFilter.checked;

            console.log('Filtering with:', { searchTerm, selectedPriceRange, showAvailable, showUnavailable }); // Debug log

            let visibleCount = 0;

            productItems.forEach(item => {
                const name = item.dataset.name;
                const price = parseInt(item.dataset.price);
                const available = item.dataset.available === 'true';

                console.log('Checking item:', { name, price, available }); // Debug log

                let showItem = true;

                // Search filter
                if (searchTerm && !name.includes(searchTerm)) {
                    showItem = false;
                }

                // Price range filter
                if (selectedPriceRange) {
                    const [minPrice, maxPrice] = selectedPriceRange.split('-').map(Number);
                    if (price < minPrice || price > maxPrice) {
                        showItem = false;
                    }
                }

                // Availability filter
                if ((showAvailable || showUnavailable) && !(
                    (showAvailable && available) ||
                    (showUnavailable && !available)
                )) {
                    showItem = false;
                }

                if (showItem) {
                    item.style.display = 'block';
                    visibleCount++;
                } else {
                    item.style.display = 'none';
                }
            });

            console.log('Visible count:', visibleCount); // Debug log

            // Update results count
            resultsCount.innerHTML = `Hiển thị <strong>${visibleCount}</strong> sản phẩm`;

            // Show/hide no results message
            if (visibleCount === 0) {
                noResults.style.display = 'block';
            } else {
                noResults.style.display = 'none';
            }
        }

        // Sort functionality
        sortBy.addEventListener('change', function() {
            console.log('Sort changed:', sortBy.value); // Debug log
            const container = document.getElementById('productContainer');
            const items = Array.from(container.querySelectorAll('.product-item'));

            items.sort((a, b) => {
                const sortValue = sortBy.value;

                if (sortValue === 'name-asc') {
                    return a.dataset.name.localeCompare(b.dataset.name);
                } else if (sortValue === 'name-desc') {
                    return b.dataset.name.localeCompare(a.dataset.name);
                } else if (sortValue === 'price-asc') {
                    return parseInt(a.dataset.price) - parseInt(b.dataset.price);
                } else if (sortValue === 'price-desc') {
                    return parseInt(b.dataset.price) - parseInt(a.dataset.price);
                }
            });

            items.forEach(item => container.appendChild(item));
        });
    });
</script>